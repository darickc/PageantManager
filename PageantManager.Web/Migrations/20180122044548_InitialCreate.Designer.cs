// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using PageantManager.Business.Entities;
using System;

namespace PageantManager.Web.Migrations
{
    [DbContext(typeof(PageantManagerContext))]
    [Migration("20180122044548_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("PageantManager.Business.Entities.Costume", b =>
                {
                    b.Property<int>("CostumeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(150);

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Photo");

                    b.HasKey("CostumeId");

                    b.ToTable("Costumes");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.CostumeGarment", b =>
                {
                    b.Property<int>("CostumeGarmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CostumeId");

                    b.Property<int>("GarmentTypeId");

                    b.HasKey("CostumeGarmentId");

                    b.HasIndex("CostumeId");

                    b.HasIndex("GarmentTypeId");

                    b.ToTable("CostumeGarments");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.Garment", b =>
                {
                    b.Property<int>("GarmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AddedDate");

                    b.Property<bool>("CheckedOut");

                    b.Property<int>("GarmentTypeId");

                    b.Property<string>("Photo");

                    b.Property<DateTime?>("RetiredDate");

                    b.HasKey("GarmentId");

                    b.HasIndex("GarmentTypeId");

                    b.ToTable("Garments");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.GarmentMeasurement", b =>
                {
                    b.Property<int>("GarmentMeasurementId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("GarmentId");

                    b.Property<float>("Max");

                    b.Property<int>("MeasurementTypeId");

                    b.Property<float>("Min");

                    b.HasKey("GarmentMeasurementId");

                    b.HasIndex("GarmentId");

                    b.HasIndex("MeasurementTypeId");

                    b.ToTable("GarmentMeasurements");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.GarmentMeasurementType", b =>
                {
                    b.Property<int>("GarmentMeasurementTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GarmentId");

                    b.Property<int>("GarmentTypeId");

                    b.Property<int>("MeasurementTypeId");

                    b.HasKey("GarmentMeasurementTypeId");

                    b.HasIndex("GarmentId");

                    b.HasIndex("GarmentTypeId");

                    b.HasIndex("MeasurementTypeId");

                    b.ToTable("GarmentMeasurementTypes");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.GarmentType", b =>
                {
                    b.Property<int>("GarmentTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(75);

                    b.Property<string>("Photo");

                    b.HasKey("GarmentTypeId");

                    b.ToTable("GarmentTypes");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.MeasurementType", b =>
                {
                    b.Property<int>("MeasurementTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("MeasurementTypeId");

                    b.ToTable("MeasurementTypes");
                });

            modelBuilder.Entity("PageantManager.Business.Entities.CostumeGarment", b =>
                {
                    b.HasOne("PageantManager.Business.Entities.Costume", "Costume")
                        .WithMany("CostumeGarments")
                        .HasForeignKey("CostumeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PageantManager.Business.Entities.GarmentType", "GarmentType")
                        .WithMany("CostumeGarments")
                        .HasForeignKey("GarmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PageantManager.Business.Entities.Garment", b =>
                {
                    b.HasOne("PageantManager.Business.Entities.GarmentType", "GarmentType")
                        .WithMany("Garments")
                        .HasForeignKey("GarmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PageantManager.Business.Entities.GarmentMeasurement", b =>
                {
                    b.HasOne("PageantManager.Business.Entities.Garment", "Garment")
                        .WithMany("GarmentMeasurements")
                        .HasForeignKey("GarmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PageantManager.Business.Entities.MeasurementType", "MeasurementType")
                        .WithMany()
                        .HasForeignKey("MeasurementTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("PageantManager.Business.Entities.GarmentMeasurementType", b =>
                {
                    b.HasOne("PageantManager.Business.Entities.Garment")
                        .WithMany("GarmentMeasurementTypes")
                        .HasForeignKey("GarmentId");

                    b.HasOne("PageantManager.Business.Entities.GarmentType", "GarmentType")
                        .WithMany()
                        .HasForeignKey("GarmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PageantManager.Business.Entities.MeasurementType", "MeasurementType")
                        .WithMany()
                        .HasForeignKey("MeasurementTypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
